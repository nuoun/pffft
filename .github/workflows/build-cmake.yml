name: Surge-PFFFT-Test

on: [pull_request, workflow_dispatch]

jobs:
  build_and_test:
    name: Build PFFT Test Cases
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            runTest: true
            testExe: ./build/src-test/surge-pffft-tests
            
          - os: macos-latest
            name: mac-x86
            runTest: true
            testExe: ./build/src-test/surge-pffft-tests
            cmakeArgs: -DCMAKE_OSX_ARCHITECTURES=x86_64

          - os: macos-latest
            name: mac-arm
            cmakeArgs: -DCMAKE_OSX_ARCHITECTURES=arm64

          - os: macos-latest
            name: mac-arm-nonative
            cmakeArgs: -DCMAKE_OSX_ARCHITECTURES=arm64

          - os: windows-latest
            name: win-x86
            runTest: true
            testExe: ./build/src-test/Release/surge-pffft-tests.exe

          - os: windows-latest
            name: win-arm64
            cmakeArgs: -G"Visual Studio 17 2022" -A arm64 -DCMAKE_SYSTEM_VERSION=10

          - os: windows-latest
            name: win-arm64ec
            cmakeArgs: -G"Visual Studio 17 2022" -A arm64ec -DCMAKE_SYSTEM_VERSION=10

          - os: windows-latest
            name: win-arm64-non-native
            cmakeArgs: -G"Visual Studio 17 2022" -A arm64 -DCMAKE_SYSTEM_VERSION=10

    steps:
      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmakeArgs }} -DSURGE_PFFFT_BUILD_TESTS=TRUE
          cmake --build build --config Release --parallel 4 --target surge-pffft-tests

      - name: Run Tests
        if: ${{ matrix.runTest }}
        run: |
          ls ${{ matrix.testExe }}
          ${{ matrix.testExe }}
